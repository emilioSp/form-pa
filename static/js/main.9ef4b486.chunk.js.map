{"version":3,"sources":["components/HeaderBar.tsx","components/QRCode.tsx","App.tsx","serviceWorker.ts","store/index.tsx","schemaLoader.ts","index.tsx"],"names":["HeaderBar","props","small","theme","type","className","responsive","tag","UncontrolledDropdown","nav","DropdownToggle","aria-haspopup","caret","color","icon","padding","size","DropdownMenu","flip","Row","Col","widths","href","ResponsiveSvgWrapper","styled","div","QRCodeConnected","connect","state","data","jsonforms","core","display","toggle","string","JSON","stringify","Modal","isOpen","ModalHeader","charCode","closeAriaLabel","wrapTag","ModalBody","renderAs","value","ModalFooter","onClick","App","useState","isVisible","setVisible","Container","Boolean","window","location","hostname","match","store","createStore","combineReducers","jsonformsReducer","cells","materialCells","renderers","materialRenderers","$RefParser","require","isYAML","process","YAML_SOURCE","schemaURL","uischemaURL","fetchSchema","url","a","dereference","fetch","text","out","yaml","safeLoad","console","debug","error","then","schemaRetrieved","log","err","schema","uischema","dataC","_meta","dispatch","Actions","init","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.9ef4b486.chunk.js","sourcesContent":["/* form-pa: Send forms to PAs with SPID\n * Copyright (C) 2020 Dipartimento per la Trasformazione Digitale\n *                    Presidenza del Consiglio dei Ministri\n\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport {\n  Col,\n  Button,\n  DropdownToggle,\n  LinkListItem,\n  DropdownMenu,\n  Header,\n  HeaderBrand,\n  HeaderContent,\n  HeaderRightZone,\n  Icon,\n  LinkList,\n  Row,\n  UncontrolledDropdown,\n} from \"design-react-kit\";\n\nimport React from \"react\";\n\nexport interface Props {\n  className: string | undefined;\n}\n\nexport const HeaderBar = (props: Props) => {\n  return (\n    <Header small={false} theme=\"\" type=\"slim\" className={props.className}>\n      <HeaderContent>\n        <HeaderBrand responsive tag=\"a\">\n          Ente appartenenza/Owner\n        </HeaderBrand>\n        <HeaderRightZone>\n          <UncontrolledDropdown nav tag=\"div\">\n            <DropdownToggle aria-haspopup caret color=\"secondary\" nav>\n              ITA\n              <Icon color=\"\" icon=\"it-expand\" padding={false} size=\"\" />\n            </DropdownToggle>\n            <DropdownMenu flip tag=\"div\">\n              <Row tag=\"div\">\n                <Col\n                  size=\"12\"\n                  tag=\"div\"\n                  widths={[\"xs\", \"sm\", \"md\", \"lg\", \"xl\"]}\n                >\n                  <LinkList tag=\"div\">\n                    <LinkListItem href=\"#\">\n                      {/* tag={function noRefCheck() {}} */}\n                      <span>ITA</span>\n                    </LinkListItem>\n                    <LinkListItem href=\"#\">\n                      <span>ENG</span>\n                    </LinkListItem>\n                  </LinkList>\n                </Col>\n              </Row>\n            </DropdownMenu>\n          </UncontrolledDropdown>\n          <Button\n            className=\"btn-icon\"\n            color=\"primary\"\n            href=\"#\"\n            icon={false}\n            size=\"full\"\n            tag=\"button\"\n          >\n            <span className=\"rounded-icon\">\n              <Icon color=\"primary\" icon=\"it-user\" padding={false} size=\"\" />\n            </span>\n            <span className=\"d-none d-lg-block\">Accedi all'area personale</span>\n          </Button>\n        </HeaderRightZone>\n      </HeaderContent>\n    </Header>\n  );\n};\n\n// export default HeaderBar;\n","/* form-pa: Send forms to PAs with SPID\n * Copyright (C) 2020 Dipartimento per la Trasformazione Digitale\n *                    Presidenza del Consiglio dei Ministri\n\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from \"react\";\nimport Qr from \"qrcode.react\";\nimport { connect } from \"react-redux\";\nimport {\n  Button,\n  Modal,\n  ModalHeader,\n  ModalBody,\n  ModalFooter,\n} from \"design-react-kit\";\nimport styled from \"styled-components\";\n\nconst ResponsiveSvgWrapper = styled.div`\n  & > svg {\n    display: block; /* svg is \"inline\" by default */\n    height: auto; /* reset height */\n    width: 100%; /* reset width */\n  }\n`;\n\ninterface Props {\n  toggle: any;\n  data: string;\n  display: boolean;\n}\n\nconst QRCode = ({ data, display, toggle }: Props) => {\n  const string = JSON.stringify(data);\n\n  return (\n    <Modal isOpen={display} toggle={toggle}>\n      <ModalHeader charCode={215} closeAriaLabel=\"Close\" tag=\"h5\" wrapTag=\"div\">\n        QRCode\n      </ModalHeader>\n      <ModalBody tag=\"div\">\n        <ResponsiveSvgWrapper>\n          <Qr renderAs=\"svg\" value={string} />\n        </ResponsiveSvgWrapper>\n      </ModalBody>\n      <ModalFooter tag=\"div\">\n        <Button color=\"secondary\" icon={false} tag=\"button\" onClick={toggle}>\n          Close\n        </Button>\n      </ModalFooter>\n    </Modal>\n  );\n};\n\nconst mapStateToProps = (state: any) => {\n  return {\n    data: state.jsonforms?.core?.data,\n  };\n};\n\nconst QRCodeConnected = connect(mapStateToProps)(QRCode);\n\nexport default QRCodeConnected;\n","/* form-pa: Send forms to PAs with SPID\n * Copyright (C) 2020 Dipartimento per la Trasformazione Digitale\n *                    Presidenza del Consiglio dei Ministri\n\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React, {useState} from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\n\nimport { HeaderBar } from \"./components/HeaderBar\";\nimport { JsonFormsDispatch } from \"@jsonforms/react\";\nimport { Button, Container } from \"design-react-kit\";\nimport QRCode from \"./components/QRCode\";\n\nimport \"bootstrap-italia/dist/css/bootstrap-italia.min.css\";\nimport \"typeface-titillium-web/index.css\";\nimport \"typeface-roboto-mono/index.css\";\nimport \"typeface-lora/index.css\";\n\n\nexport const App = () => {\n  const [isVisible, setVisible] = useState(false);\n  return (\n    <div className=\"App\">\n      <HeaderBar className=\"App-header\" />\n      <Container>\n        <JsonFormsDispatch />\n        <QRCode display={isVisible} toggle={()=> setVisible(!isVisible)}/>\n        <Button color=\"primary\" icon={false} tag=\"button\">\n          Save\n        </Button>{\" \"}\n        <Button color=\"secondary\" icon={false} tag=\"button\">\n          Reset\n        </Button>{\" \"}\n        <Button\n          color=\"secondary\"\n          icon={false}\n          tag=\"button\"\n          onClick={() => setVisible(!isVisible)}\n        >\n          Show/Hide QRCode\n        </Button>\n      </Container>\n    </div>\n  );\n};\n","/* form-pa: Send forms to PAs with SPID\n * Copyright (C) 2020 Dipartimento per la Trasformazione Digitale\n *                    Presidenza del Consiglio dei Ministri\n\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\n// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","/* form-pa: Send forms to PAs with SPID\n * Copyright (C) 2020 Dipartimento per la Trasformazione Digitale\n *                    Presidenza del Consiglio dei Ministri\n\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport { jsonformsReducer } from \"@jsonforms/core\";\nimport {\n  materialRenderers,\n  materialCells,\n} from \"@jsonforms/material-renderers\";\nimport { combineReducers, createStore } from \"redux\";\n\nconst store = createStore(combineReducers({ jsonforms: jsonformsReducer() }), {\n  jsonforms: {\n    cells: materialCells,\n    renderers: materialRenderers,\n  },\n});\n\nexport default store;","import { Actions } from \"@jsonforms/core\";\nimport yaml from \"js-yaml\";\nimport { Store } from \"redux\";\n\nconst $RefParser = require(\"@apidevtools/json-schema-ref-parser\");\n\nconst isYAML = process.env.YAML_SOURCE || true;\n\nlet schemaURL: string = \"\",\n  uischemaURL: string = \"\";\n\nif (isYAML) {\n  schemaURL = \"schema/schema.yaml\";\n  uischemaURL = \"schema/uischema.yaml\";\n} else {\n  schemaURL = \"schema/schema.json\";\n  uischemaURL = \"schema/uischema.json\";\n}\n\nconst fetchSchema = async (url: string, dereference: boolean = false) => {\n  const text = await (await fetch(url)).text();\n  const out = yaml.safeLoad(text);\n\n  console.debug(url, out);\n\n  if (!dereference) return out;\n\n  try {\n    return await $RefParser.dereference(out);\n  } catch (err) {\n    console.error(\"Cannot dereference\", err);\n    throw err;\n  }\n};\n\nexport const loadSchema = (store: Store) => {\n  fetchSchema(schemaURL).then((schemaRetrieved) => {\n    console.log(\"schemaRetrieved\", schemaRetrieved);\n\n    $RefParser.dereference(schemaRetrieved, (err: any, schema: any) => {\n      console.log(\"schema\", err);\n      if (err) {\n        console.error(err);\n        throw err;\n      }\n      fetchSchema(uischemaURL, true).then((uischema) => {\n        const dataC = uischema._meta?.data || {};\n        store.dispatch(Actions.init(dataC, schema, uischema));\n      });\n    });\n  });\n};\n","/* form-pa: Send forms to PAs with SPID\n * Copyright (C) 2020 Dipartimento per la Trasformazione Digitale\n *                    Presidenza del Consiglio dei Ministri\n\n * This program is free software: you can redistribute it and/or modify\n * it under the terms of the GNU Affero General Public License as published\n * by the Free Software Foundation, either version 3 of the License, or\n * (at your option) any later version.\n\n * This program is distributed in the hope that it will be useful,\n * but WITHOUT ANY WARRANTY; without even the implied warranty of\n * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\n * GNU Affero General Public License for more details.\n\n * You should have received a copy of the GNU Affero General Public License\n * along with this program.  If not, see <https://www.gnu.org/licenses/>.\n */\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport { Provider } from \"react-redux\";\n\nimport { JsonFormsReduxContext } from \"@jsonforms/react\";\nimport store from \"./store\";\nimport { loadSchema } from \"./schemaLoader\";\n\nloadSchema(store);\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <JsonFormsReduxContext>\n        <App />\n      </JsonFormsReduxContext>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}